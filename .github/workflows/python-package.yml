# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install flake8 pytest
          if [ -f requirements.txt ]; then pip3 install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --ignore=E203,E402 --statistics
      - name: Execute scraping file
        run: |
          python3 scrape-data_JSON.py
      - name: Commit files
        id: commit
        run: |
          git config --local user.email "minhsueh@usc.edu"
          git config --local user.name "minhsueh"
          git add --all
          if [-z "$(git status --porcelain)"]; then
            echo "::set-output name=push::false"
          else
            current_date=$(date +"%Y-%m-%d")
            git commit -m "Automatic update on $current_date" -a
            echo "::set-output name=push::true"
          fi
        shell: bash
      - name: Push changes
        if: steps.commit.outputs.push == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
